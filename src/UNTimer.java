
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author computing
 */
public class UNTimer extends javax.swing.JFrame {
    //global variables
    Connection connection;
    Statement state; //insert 
    
    ResultSet rs = null; //select
    PreparedStatement ps = null; //select
    
    int instagateDebate;
    
    int chairID;
    int delegateID;
    int committeeID; 
    int countryID;
    
    //My timer variables:
    Boolean isIt = false;
    int sec;
    int min;
    int secMax;
    int minMax;
    int counter;
    
    public void setCommitteeID(int committeeID){
        this.committeeID = committeeID;
    }
    
    public void setChairID(int chairID){
        this.chairID = chairID;
    }
    
    public void setCombobox(){
        
       //add a section for the timer that won't count towards anything
       jComboBox1.addItem("Unmoderated Caucus");
       
       try{
            
            //get country names and add to drop down list
            String country = "SELECT `countryName`, country.`countryID`, `committeeID` FROM `country`, `delegate` WHERE country.countryID =delegate.countryID AND `committeeID`= "+committeeID+"";
            ps = connection.prepareStatement(country);
            rs = ps.executeQuery();

            while (rs.next()) {
               jComboBox1.addItem(rs.getString("countryName"));
            }
        }catch(SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
        
    public UNTimer() {
        
        //create connection
        //connect to database
        connectToDatabase Test = new connectToDatabase();
        Test.connectToDatabase();
        //update connection variable
        connection = Test.getConnectionVariable(connection);

        //put interface in place
        initComponents();
        btnStart.setVisible(true);
        btnPause.setVisible(false);
        
        counter = 0;
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        timerName = new javax.swing.JLabel();
        timeLeftMin = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        btnPause = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSpinnerMin = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerSec = new javax.swing.JSpinner();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        timeLeftSec1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButtonSubmitTime = new javax.swing.JButton();
        jButtonVoting = new javax.swing.JButton();
        jButton_signOut = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        timerName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        timerName.setText("Timer : ");

        timeLeftMin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        timeLeftMin.setText("0");

        btnStart.setText("Start");
        btnStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStartMouseClicked(evt);
            }
        });

        btnPause.setText("Pause");
        btnPause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPauseMouseClicked(evt);
            }
        });

        jLabel1.setText("Minutes:");

        jSpinnerMin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        jLabel2.setText("Seconds:");

        jSpinnerSec.setModel(new javax.swing.SpinnerNumberModel(0, null, 59, 1));

        jLabel3.setText("Country Speaking");

        timeLeftSec1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        timeLeftSec1.setText("0");

        jLabel4.setText("min");

        jLabel5.setText("sec");

        jButtonSubmitTime.setText("Submit Time");
        jButtonSubmitTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitTimeActionPerformed(evt);
            }
        });

        jButtonVoting.setText("Voting Page");
        jButtonVoting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVotingActionPerformed(evt);
            }
        });

        jButton_signOut.setText("Sign Out");
        jButton_signOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_signOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSpinnerMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinnerSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 60, Short.MAX_VALUE)
                        .addComponent(btnStart)
                        .addGap(36, 36, 36)
                        .addComponent(btnPause))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 68, Short.MAX_VALUE)
                        .addComponent(timerName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeLeftMin)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton_signOut, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeLeftSec1)
                        .addGap(0, 186, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonVoting, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSubmitTime))
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jSpinnerMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jSpinnerSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timerName)
                    .addComponent(timeLeftMin, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLeftSec1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonVoting)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton_signOut)
                        .addGap(29, 29, 29)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnPause)
                    .addComponent(jButtonSubmitTime))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMouseClicked
 
        //get user inputs from box
        minMax =Integer.parseInt(jSpinnerMin.getValue().toString()) ;
        secMax =Integer.parseInt(jSpinnerSec.getValue().toString()) ;
       
        if ((minMax == 0) && (secMax == 0) ) //And operator 
        {
            JOptionPane.showMessageDialog(null,"Error, please type in the time length (minute and second)");
        }else{ 
            btnStart.setVisible(false); //displaying buttons
            btnPause.setVisible(true); //displaying buttons
            
                Timer timer = new Timer(); //new timer
                
            counter = counter + 1;
            
           //set the timer, second and minute
           if (counter == 1){
               min = minMax;
               sec = secMax;        
               timeLeftMin.setText(Integer.toString(min));
               timeLeftSec1.setText(Integer.toString(sec));
           }else{
               min = Integer.parseInt(timeLeftMin.getText());
               sec = Integer.parseInt(timeLeftSec1.getText());
           }

           TimerTask task = new TimerTask() {
               public void run() {
                   timeLeftSec1.setText(Integer.toString(sec)); //the timer lable to counter.

                   if (sec == 0){
                       min = min -1;
                       timeLeftMin.setText(Integer.toString(min));
                       sec = 60;
                   }
                   sec --; //decrease counter
                   timeLeftSec1.setText(Integer.toString(sec)); //the timer lable to counter.

                   if (min == 0 && sec == 0){
                       timer.cancel();
                       btnStart.setVisible(false);
                       btnPause.setVisible(false);
                   } else if(isIt){
                       timer.cancel();
                       isIt = false;
                   }
               }
           };
           timer.scheduleAtFixedRate(task, 1000, 1000); // =  timer.scheduleAtFixedRate(task, delay, period); 
        }
      
    }//GEN-LAST:event_btnStartMouseClicked

    private void btnPauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPauseMouseClicked
        isIt = true; // changing the boolian isIt to true, which will stop the timer.
        //button visiblity 
        btnStart.setVisible(true);
        btnPause.setVisible(false);
    }//GEN-LAST:event_btnPauseMouseClicked

    private void jButtonSubmitTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitTimeActionPerformed
        
        int timeActualSpoke;
        int minLeft = Integer.parseInt(timeLeftMin.getText());
        int secLeft = Integer.parseInt(timeLeftSec1.getText());
        
        timeActualSpoke = ((minMax - minLeft)*60) + (secMax - secLeft); //time in total the speaker has spoke in seconds

        String country = jComboBox1.getSelectedItem().toString();
            
        if (country == "Unmoderated Caucus") //this means that no vote is being processed as not a country which is being timed
        {
            JOptionPane.showMessageDialog(null,"Unmoderated Caucus Complete");
        }else{
            try{
                //countryName to countryID
                String quereyCountry = "SELECT `countryID` FROM `country` WHERE `countryName`= ?";
                ps = connection.prepareStatement(quereyCountry);
                ps.setString(1, country);
                rs = ps.executeQuery();

                while (rs.next()) {
                    countryID = rs.getInt("countryID");
                }

                //get delegateID
                String quereydelegate = "SELECT `delegateID` FROM `delegate` WHERE `countryID`= " + countryID+ " AND `committeeID`="+committeeID+""; //need to fix
                ps = connection.prepareStatement(quereydelegate);
                rs = ps.executeQuery();

                while (rs.next()) {
                    delegateID = rs.getInt("delegateID");
                }
            }catch(SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
            } 
            
            try{
                Statement state=(Statement)connection.createStatement();
                String sql_insertTime = "INSERT INTO `timer` VALUES("+delegateID+","+ timeActualSpoke +")";
                state.executeUpdate(sql_insertTime);

                JOptionPane.showMessageDialog(null,"Your time has been noted");

            } catch (Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage() ,"Error cannot insert time into Timer table", 1);
            }
        }
            
         
       
        
        //clear everything so that the timer can be used again
        counter = 0; 
        timeLeftMin.setText("0");
        timeLeftSec1.setText("0");
        
        
    }//GEN-LAST:event_jButtonSubmitTimeActionPerformed

    private void jButtonVotingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVotingActionPerformed
        // TODO add your handling code here:
        this.setVisible(false); //get rid of the current form
        votingPage1 form = new votingPage1();
        
        form.setCommitteeID(committeeID);
        form.setChairID(chairID);
        form.setCombobox();
        
        form.setVisible(true); //display voting page
    }//GEN-LAST:event_jButtonVotingActionPerformed

    private void jButton_signOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_signOutActionPerformed
        this.setVisible(false);

        homePage form = new homePage();
        form.setVisible(true);
    }//GEN-LAST:event_jButton_signOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UNTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UNTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UNTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UNTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UNTimer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPause;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonSubmitTime;
    private javax.swing.JButton jButtonVoting;
    private javax.swing.JButton jButton_signOut;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSpinner jSpinnerMin;
    private javax.swing.JSpinner jSpinnerSec;
    private javax.swing.JLabel timeLeftMin;
    private javax.swing.JLabel timeLeftSec1;
    private javax.swing.JLabel timerName;
    // End of variables declaration//GEN-END:variables
}
