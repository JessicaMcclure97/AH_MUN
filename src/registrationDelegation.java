import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;


/**
 *
 * @author j.mcclure
 */
public class registrationDelegation extends javax.swing.JFrame {
    //global variables
    Connection connection;
    ResultSet rs_country = null;
    PreparedStatement ps = null;
    ResultSet rs_countryID = null, rs = null;
    
    int securityCouncil = 0;
    int countryID;
    
    String countryName; 
    
    
    public registrationDelegation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_Username = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField_1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField_Again = new javax.swing.JPasswordField();
        jCheckBox_SecuityCouncil = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jButton_registration = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox_country = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField_Disarmament = new javax.swing.JTextField();
        jTextField_Environment = new javax.swing.JTextField();
        ecosoc = new javax.swing.JTextField();
        jTextField_SC = new javax.swing.JTextField();
        jButton_back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username");

        jLabel2.setText("Password (must be at least 5 characters)");

        jLabel3.setText("Please ReEnter Password");

        jCheckBox_SecuityCouncil.setText("Security Council Country");
        jCheckBox_SecuityCouncil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_SecuityCouncilActionPerformed(evt);
            }
        });

        jLabel4.setText("Please check the button if you would like a secuirty council country");

        jButton_registration.setText("Submit Regstration");
        jButton_registration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_registrationActionPerformed(evt);
            }
        });

        jLabel5.setText("Country");

        jComboBox_country.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Argentina", "Brazil", "China ", "France", "Germeny", "Russia", "Spain", "United Kingdom", "United States of America", "Venezuela" }));

        jLabel6.setText("Please Enter the Ages of the Girls in their respective delegaiton");

        jLabel7.setText("Disarmament");

        jLabel8.setText("Environment");

        jLabel9.setText("EcoSoc");

        jLabel10.setText("Security Council (If applicable)");

        jTextField_Disarmament.setToolTipText("");
        jTextField_Disarmament.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_DisarmamentActionPerformed(evt);
            }
        });

        jTextField_Environment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_EnvironmentActionPerformed(evt);
            }
        });

        ecosoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ecosocActionPerformed(evt);
            }
        });

        jTextField_SC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_SCActionPerformed(evt);
            }
        });

        jButton_back.setText("Back");
        jButton_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox_country, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField_1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jPasswordField_Again, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_Disarmament)
                                    .addComponent(jTextField_Environment)
                                    .addComponent(ecosoc)
                                    .addComponent(jTextField_SC, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton_back)
                                        .addGap(41, 41, 41)
                                        .addComponent(jButton_registration)
                                        .addGap(178, 178, 178))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_SecuityCouncil)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(82, 82, 82))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField_Again, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField_Disarmament, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jTextField_Environment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_SecuityCouncil)
                    .addComponent(jLabel9)
                    .addComponent(ecosoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField_SC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_registration)
                    .addComponent(jButton_back))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox_SecuityCouncilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_SecuityCouncilActionPerformed
       securityCouncil = 1;
    }//GEN-LAST:event_jCheckBox_SecuityCouncilActionPerformed

    private void jButton_registrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_registrationActionPerformed
         //connect to database
        connectToDatabase Test = new connectToDatabase();
        Test.connectToDatabase();
        //update connection variable
        connection = Test.getConnectionVariable(connection);
       
        String inputUsername = jTextField_Username.getText();
        String inputPassword = String.valueOf(jPasswordField_1.getPassword());
        String inputPassword2 = String.valueOf(jPasswordField_Again.getPassword());
        int num_Username = 1;
        
        try{
             //see if country username is unique
            String matchUsername = "SELECT COUNT(username) AS num_username FROM country WHERE username = ?"; //sql statement to count the num ber of rows with the same username
            ps = connection.prepareStatement(matchUsername);
            ps.setString(1, inputUsername);
            rs = ps.executeQuery();
            
            while (rs.next())
            {
                num_Username = rs.getInt("num_username");
            }
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        int environmentAge = Integer.parseInt(jTextField_Environment.getText());
        int disarmamentAge = Integer.parseInt(jTextField_Disarmament.getText());
        int ecosocAge = Integer.parseInt(ecosoc.getText());
        int scAge = 0;
        if (securityCouncil == 1)
        {
            scAge = Integer.parseInt(jTextField_SC.getText());
        }
        
        countryName = (String)jComboBox_country.getSelectedItem( );
        
        //make sure country is unique, no code needed as error message comes up since the SQL server has an error
        
        if(num_Username == 0) //check to see if username is unique
        {
           if(inputPassword.equals(inputPassword2)) 
           {
               //looking for digits and special characters
               Pattern digit = Pattern.compile("[0-9]");
               Pattern special = Pattern.compile ("[!@#$%&*()_+=|<>?{}\\[\\]~-]");

               Matcher hasDigit = digit.matcher(inputPassword);
               Matcher hasSpecial = special.matcher(inputPassword);

               if (hasDigit.find() == false && hasSpecial.find() == false)
               {
                   JOptionPane.showMessageDialog(null, "I am sorry the Password you entered doesn't include a digit or special character. Please re-enter a password");

               } else if(inputPassword.length() <= 4)
               {
                    JOptionPane.showMessageDialog(null, "I am sorry the Password you entered does not meet the required length of 5 characters. Please try again.");

               } else if(inputUsername.equals("null"))
               {
                    JOptionPane.showMessageDialog(null, "I am sorry you need to input a username.");
                    
               } else if (inputPassword.equals("null"))
               {
                    JOptionPane.showMessageDialog(null, "I am sorry you need to input a password.");
               }else
                       try{
                           Statement state=(Statement)connection.createStatement();
                           //inserting delegation information into database
                           String insertDelegation="INSERT INTO `country`(`username`, `password`, `countryName`, `securityCouncil`) VALUES ('"+inputUsername+"','"+inputPassword +"','"+countryName+ "','"+securityCouncil+ "')";
                           state.executeUpdate(insertDelegation);
                           //get countryID after the country record is created
                           getCountryID(); //country ID is held in global variable to access

                           //inserting individual delegate information into database
                           String insertDelegateDis = "INSERT INTO `delegate`(`age`,`countryID`,`committeeID`,`totalScore`) VALUES('"+disarmamentAge+"', '"+countryID+"','1','0')";
                           state.executeUpdate(insertDelegateDis);
                           String insertDelegateEnv = "INSERT INTO `delegate`(`age`,`countryID`,`committeeID`,`totalScore`) VALUES('"+environmentAge+"', '"+countryID+"','3','0')";
                           state.executeUpdate(insertDelegateEnv);
                           String insertDelegateEco = "INSERT INTO `delegate`(`age`,`countryID`,`committeeID`,`totalScore`) VALUES('"+ecosocAge+"', '"+countryID+"','2','0')";
                           state.executeUpdate(insertDelegateEco);

                           if(securityCouncil == 1)
                           {
                               String insertDelegateSC = "INSERT INTO `delegate`(`age`,`countryID`,`committeeID`,`totalScore`) VALUES('"+scAge+"', '"+countryID+"','4','0')";
                               state.executeUpdate(insertDelegateSC);
                           }

                            JOptionPane.showMessageDialog(null,"Registration Successful");

                       } catch (Exception e){
                           JOptionPane.showMessageDialog(null, e.getMessage() ,"Error", 1);
               } 

           } else {
               JOptionPane.showMessageDialog(null, "I am sorry the two passwords you entered to not match. Please try again.");
           }
        } else {
            JOptionPane.showMessageDialog(null, "Username not unique, please enter another username");
        }
    }//GEN-LAST:event_jButton_registrationActionPerformed

    private void jTextField_EnvironmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_EnvironmentActionPerformed
        
    }//GEN-LAST:event_jTextField_EnvironmentActionPerformed

    private void jTextField_DisarmamentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_DisarmamentActionPerformed

    }//GEN-LAST:event_jTextField_DisarmamentActionPerformed

    private void ecosocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ecosocActionPerformed
        
    }//GEN-LAST:event_ecosocActionPerformed

    private void jTextField_SCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_SCActionPerformed
         
    }//GEN-LAST:event_jTextField_SCActionPerformed

    private void jButton_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_backActionPerformed
        this.setVisible(false);

        homePage form = new homePage();
        form.setVisible(true);
        
    }//GEN-LAST:event_jButton_backActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void getCountryID()
    {
        
        try{
            //get list of countries so that combobox can update automatically depending on the committee
            String sql_countryID = "SELECT `countryID` FROM `country` WHERE `countryName` = ? ";
            ps = connection.prepareStatement(sql_countryID);
            ps.setString(1, countryName); 
            rs_countryID = ps.executeQuery(); 

            if(rs_countryID.next()) //if match and login is a chair
            {   
                countryID = rs_countryID.getInt("countryID");
            }        
        } catch (Exception e){
             JOptionPane.showMessageDialog(null, e.getMessage() ,"Error", 1);
        }
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registrationDelegation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registrationDelegation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registrationDelegation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registrationDelegation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registrationDelegation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ecosoc;
    private javax.swing.JButton jButton_back;
    private javax.swing.JButton jButton_registration;
    private javax.swing.JCheckBox jCheckBox_SecuityCouncil;
    private javax.swing.JComboBox<String> jComboBox_country;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField_1;
    private javax.swing.JPasswordField jPasswordField_Again;
    private javax.swing.JTextField jTextField_Disarmament;
    private javax.swing.JTextField jTextField_Environment;
    private javax.swing.JTextField jTextField_SC;
    private javax.swing.JTextField jTextField_Username;
    // End of variables declaration//GEN-END:variables
}
